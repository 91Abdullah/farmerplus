//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FarmerPlusClient.ServiceReferenceCropCommonHelper {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceCropCommonHelper.ICropHelperServices")]
    public interface ICropHelperServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/DoWork", ReplyAction="http://tempuri.org/ICropHelperServices/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/InsertSeedInformation", ReplyAction="http://tempuri.org/ICropHelperServices/InsertSeedInformationResponse")]
        int InsertSeedInformation(string seed_name, int semantics_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/GetSeeds", ReplyAction="http://tempuri.org/ICropHelperServices/GetSeedsResponse")]
        System.Data.DataSet GetSeeds();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/GetCropMappingId", ReplyAction="http://tempuri.org/ICropHelperServices/GetCropMappingIdResponse")]
        System.Data.DataSet GetCropMappingId(int district_id, int crop_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/InsertOrUpdateCropMapping", ReplyAction="http://tempuri.org/ICropHelperServices/InsertOrUpdateCropMappingResponse")]
        int InsertOrUpdateCropMapping(int crop_mapping_id, float price, string reapingStartDate, string reapingEndDate, string cultStartDate, string cultEndDate, int district_id, int crop_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/GetSeedsForaCropMapping", ReplyAction="http://tempuri.org/ICropHelperServices/GetSeedsForaCropMappingResponse")]
        System.Data.DataSet GetSeedsForaCropMapping(int crop_mapping_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/GetPesticidesForaCropMapping", ReplyAction="http://tempuri.org/ICropHelperServices/GetPesticidesForaCropMappingResponse")]
        System.Data.DataSet GetPesticidesForaCropMapping(int crop_mapping_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/GetFertilizersForaCropMapping", ReplyAction="http://tempuri.org/ICropHelperServices/GetFertilizersForaCropMappingResponse")]
        System.Data.DataSet GetFertilizersForaCropMapping(int crop_mapping_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/DeleteAndInsertSeedAttributes", ReplyAction="http://tempuri.org/ICropHelperServices/DeleteAndInsertSeedAttributesResponse")]
        int DeleteAndInsertSeedAttributes(FarmerPlusDataObjectLayer.Crop_attributes[] cropAttributes, int crop_mapping_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/DeleteAndInsertFertilizerAttributes", ReplyAction="http://tempuri.org/ICropHelperServices/DeleteAndInsertFertilizerAttributesRespons" +
            "e")]
        int DeleteAndInsertFertilizerAttributes(FarmerPlusDataObjectLayer.Crop_attributes[] cropAttributes, int crop_mapping_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/DeleteAndInsertPesticideAttributes", ReplyAction="http://tempuri.org/ICropHelperServices/DeleteAndInsertPesticideAttributesResponse" +
            "")]
        int DeleteAndInsertPesticideAttributes(FarmerPlusDataObjectLayer.Crop_attributes[] cropAttributes, int crop_mapping_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/GetReapingScheduleInfo", ReplyAction="http://tempuri.org/ICropHelperServices/GetReapingScheduleInfoResponse")]
        System.Data.DataSet GetReapingScheduleInfo(string currentDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/GetCultivationScheduleInfo", ReplyAction="http://tempuri.org/ICropHelperServices/GetCultivationScheduleInfoResponse")]
        System.Data.DataSet GetCultivationScheduleInfo(string currentDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/GetLevelTwoMenu", ReplyAction="http://tempuri.org/ICropHelperServices/GetLevelTwoMenuResponse")]
        System.Data.DataSet GetLevelTwoMenu(int sequence_number, int parent_lkp_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/GetLevelOneMenu", ReplyAction="http://tempuri.org/ICropHelperServices/GetLevelOneMenuResponse")]
        System.Data.DataSet GetLevelOneMenu(int sequence_number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/InsertComplaint", ReplyAction="http://tempuri.org/ICropHelperServices/InsertComplaintResponse")]
        int InsertComplaint(string complaint_type, string complaint_text, int city_id, string phone_number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/GetCropPrice", ReplyAction="http://tempuri.org/ICropHelperServices/GetCropPriceResponse")]
        System.Data.DataSet GetCropPrice(int city_id, string cropName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/GetSeedPrice", ReplyAction="http://tempuri.org/ICropHelperServices/GetSeedPriceResponse")]
        System.Data.DataSet GetSeedPrice(int city_id, string seedName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/GetMenus", ReplyAction="http://tempuri.org/ICropHelperServices/GetMenusResponse")]
        System.Data.DataSet GetMenus(int application_id, int isexpert);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICropHelperServicesChannel : FarmerPlusClient.ServiceReferenceCropCommonHelper.ICropHelperServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CropHelperServicesClient : System.ServiceModel.ClientBase<FarmerPlusClient.ServiceReferenceCropCommonHelper.ICropHelperServices>, FarmerPlusClient.ServiceReferenceCropCommonHelper.ICropHelperServices {
        
        public CropHelperServicesClient() {
        }
        
        public CropHelperServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CropHelperServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CropHelperServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CropHelperServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public int InsertSeedInformation(string seed_name, int semantics_id) {
            return base.Channel.InsertSeedInformation(seed_name, semantics_id);
        }
        
        public System.Data.DataSet GetSeeds() {
            return base.Channel.GetSeeds();
        }
        
        public System.Data.DataSet GetCropMappingId(int district_id, int crop_id) {
            return base.Channel.GetCropMappingId(district_id, crop_id);
        }
        
        public int InsertOrUpdateCropMapping(int crop_mapping_id, float price, string reapingStartDate, string reapingEndDate, string cultStartDate, string cultEndDate, int district_id, int crop_id) {
            return base.Channel.InsertOrUpdateCropMapping(crop_mapping_id, price, reapingStartDate, reapingEndDate, cultStartDate, cultEndDate, district_id, crop_id);
        }
        
        public System.Data.DataSet GetSeedsForaCropMapping(int crop_mapping_id) {
            return base.Channel.GetSeedsForaCropMapping(crop_mapping_id);
        }
        
        public System.Data.DataSet GetPesticidesForaCropMapping(int crop_mapping_id) {
            return base.Channel.GetPesticidesForaCropMapping(crop_mapping_id);
        }
        
        public System.Data.DataSet GetFertilizersForaCropMapping(int crop_mapping_id) {
            return base.Channel.GetFertilizersForaCropMapping(crop_mapping_id);
        }
        
        public int DeleteAndInsertSeedAttributes(FarmerPlusDataObjectLayer.Crop_attributes[] cropAttributes, int crop_mapping_id) {
            return base.Channel.DeleteAndInsertSeedAttributes(cropAttributes, crop_mapping_id);
        }
        
        public int DeleteAndInsertFertilizerAttributes(FarmerPlusDataObjectLayer.Crop_attributes[] cropAttributes, int crop_mapping_id) {
            return base.Channel.DeleteAndInsertFertilizerAttributes(cropAttributes, crop_mapping_id);
        }
        
        public int DeleteAndInsertPesticideAttributes(FarmerPlusDataObjectLayer.Crop_attributes[] cropAttributes, int crop_mapping_id) {
            return base.Channel.DeleteAndInsertPesticideAttributes(cropAttributes, crop_mapping_id);
        }
        
        public System.Data.DataSet GetReapingScheduleInfo(string currentDate) {
            return base.Channel.GetReapingScheduleInfo(currentDate);
        }
        
        public System.Data.DataSet GetCultivationScheduleInfo(string currentDate) {
            return base.Channel.GetCultivationScheduleInfo(currentDate);
        }
        
        public System.Data.DataSet GetLevelTwoMenu(int sequence_number, int parent_lkp_id) {
            return base.Channel.GetLevelTwoMenu(sequence_number, parent_lkp_id);
        }
        
        public System.Data.DataSet GetLevelOneMenu(int sequence_number) {
            return base.Channel.GetLevelOneMenu(sequence_number);
        }
        
        public int InsertComplaint(string complaint_type, string complaint_text, int city_id, string phone_number) {
            return base.Channel.InsertComplaint(complaint_type, complaint_text, city_id, phone_number);
        }
        
        public System.Data.DataSet GetCropPrice(int city_id, string cropName) {
            return base.Channel.GetCropPrice(city_id, cropName);
        }
        
        public System.Data.DataSet GetSeedPrice(int city_id, string seedName) {
            return base.Channel.GetSeedPrice(city_id, seedName);
        }
        
        public System.Data.DataSet GetMenus(int application_id, int isexpert) {
            return base.Channel.GetMenus(application_id, isexpert);
        }
    }
}
