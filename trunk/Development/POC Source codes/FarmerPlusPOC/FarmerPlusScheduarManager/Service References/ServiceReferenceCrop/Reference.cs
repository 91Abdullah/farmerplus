//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FarmerPlusScheduarManager.ServiceReferenceCrop {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Crop_attributes", Namespace="http://schemas.datacontract.org/2004/07/FarmerPlusDataObjectLayer")]
    [System.SerializableAttribute()]
    public partial class Crop_attributes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int att_table_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int attribute_lkp_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int crop_mapping_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool is_seedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float priceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int att_table_id {
            get {
                return this.att_table_idField;
            }
            set {
                if ((this.att_table_idField.Equals(value) != true)) {
                    this.att_table_idField = value;
                    this.RaisePropertyChanged("att_table_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int attribute_lkp_id {
            get {
                return this.attribute_lkp_idField;
            }
            set {
                if ((this.attribute_lkp_idField.Equals(value) != true)) {
                    this.attribute_lkp_idField = value;
                    this.RaisePropertyChanged("attribute_lkp_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int crop_mapping_id {
            get {
                return this.crop_mapping_idField;
            }
            set {
                if ((this.crop_mapping_idField.Equals(value) != true)) {
                    this.crop_mapping_idField = value;
                    this.RaisePropertyChanged("crop_mapping_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool is_seed {
            get {
                return this.is_seedField;
            }
            set {
                if ((this.is_seedField.Equals(value) != true)) {
                    this.is_seedField = value;
                    this.RaisePropertyChanged("is_seed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceCrop.ICropHelperServices")]
    public interface ICropHelperServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/DoWork", ReplyAction="http://tempuri.org/ICropHelperServices/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/InsertSeedInformation", ReplyAction="http://tempuri.org/ICropHelperServices/InsertSeedInformationResponse")]
        int InsertSeedInformation(string seed_name, int semantics_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/GetSeeds", ReplyAction="http://tempuri.org/ICropHelperServices/GetSeedsResponse")]
        System.Data.DataSet GetSeeds();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/GetCropMappingId", ReplyAction="http://tempuri.org/ICropHelperServices/GetCropMappingIdResponse")]
        System.Data.DataSet GetCropMappingId(int district_id, int crop_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/InsertOrUpdateCropMapping", ReplyAction="http://tempuri.org/ICropHelperServices/InsertOrUpdateCropMappingResponse")]
        int InsertOrUpdateCropMapping(int crop_mapping_id, float price, string reapingStartDate, string reapingEndDate, string cultStartDate, string cultEndDate, int district_id, int crop_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/GetSeedsForaCropMapping", ReplyAction="http://tempuri.org/ICropHelperServices/GetSeedsForaCropMappingResponse")]
        System.Data.DataSet GetSeedsForaCropMapping(int crop_mapping_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/GetPesticidesForaCropMapping", ReplyAction="http://tempuri.org/ICropHelperServices/GetPesticidesForaCropMappingResponse")]
        System.Data.DataSet GetPesticidesForaCropMapping(int crop_mapping_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/GetFertilizersForaCropMapping", ReplyAction="http://tempuri.org/ICropHelperServices/GetFertilizersForaCropMappingResponse")]
        System.Data.DataSet GetFertilizersForaCropMapping(int crop_mapping_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/DeleteAndInsertSeedAttributes", ReplyAction="http://tempuri.org/ICropHelperServices/DeleteAndInsertSeedAttributesResponse")]
        int DeleteAndInsertSeedAttributes(FarmerPlusScheduarManager.ServiceReferenceCrop.Crop_attributes[] cropAttributes, int crop_mapping_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/DeleteAndInsertFertilizerAttributes", ReplyAction="http://tempuri.org/ICropHelperServices/DeleteAndInsertFertilizerAttributesRespons" +
            "e")]
        int DeleteAndInsertFertilizerAttributes(FarmerPlusScheduarManager.ServiceReferenceCrop.Crop_attributes[] cropAttributes, int crop_mapping_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/DeleteAndInsertPesticideAttributes", ReplyAction="http://tempuri.org/ICropHelperServices/DeleteAndInsertPesticideAttributesResponse" +
            "")]
        int DeleteAndInsertPesticideAttributes(FarmerPlusScheduarManager.ServiceReferenceCrop.Crop_attributes[] cropAttributes, int crop_mapping_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/GetReapingScheduleInfo", ReplyAction="http://tempuri.org/ICropHelperServices/GetReapingScheduleInfoResponse")]
        System.Data.DataSet GetReapingScheduleInfo(string currentDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICropHelperServices/GetCultivationScheduleInfo", ReplyAction="http://tempuri.org/ICropHelperServices/GetCultivationScheduleInfoResponse")]
        System.Data.DataSet GetCultivationScheduleInfo(string currentDate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICropHelperServicesChannel : FarmerPlusScheduarManager.ServiceReferenceCrop.ICropHelperServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CropHelperServicesClient : System.ServiceModel.ClientBase<FarmerPlusScheduarManager.ServiceReferenceCrop.ICropHelperServices>, FarmerPlusScheduarManager.ServiceReferenceCrop.ICropHelperServices {
        
        public CropHelperServicesClient() {
        }
        
        public CropHelperServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CropHelperServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CropHelperServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CropHelperServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public int InsertSeedInformation(string seed_name, int semantics_id) {
            return base.Channel.InsertSeedInformation(seed_name, semantics_id);
        }
        
        public System.Data.DataSet GetSeeds() {
            return base.Channel.GetSeeds();
        }
        
        public System.Data.DataSet GetCropMappingId(int district_id, int crop_id) {
            return base.Channel.GetCropMappingId(district_id, crop_id);
        }
        
        public int InsertOrUpdateCropMapping(int crop_mapping_id, float price, string reapingStartDate, string reapingEndDate, string cultStartDate, string cultEndDate, int district_id, int crop_id) {
            return base.Channel.InsertOrUpdateCropMapping(crop_mapping_id, price, reapingStartDate, reapingEndDate, cultStartDate, cultEndDate, district_id, crop_id);
        }
        
        public System.Data.DataSet GetSeedsForaCropMapping(int crop_mapping_id) {
            return base.Channel.GetSeedsForaCropMapping(crop_mapping_id);
        }
        
        public System.Data.DataSet GetPesticidesForaCropMapping(int crop_mapping_id) {
            return base.Channel.GetPesticidesForaCropMapping(crop_mapping_id);
        }
        
        public System.Data.DataSet GetFertilizersForaCropMapping(int crop_mapping_id) {
            return base.Channel.GetFertilizersForaCropMapping(crop_mapping_id);
        }
        
        public int DeleteAndInsertSeedAttributes(FarmerPlusScheduarManager.ServiceReferenceCrop.Crop_attributes[] cropAttributes, int crop_mapping_id) {
            return base.Channel.DeleteAndInsertSeedAttributes(cropAttributes, crop_mapping_id);
        }
        
        public int DeleteAndInsertFertilizerAttributes(FarmerPlusScheduarManager.ServiceReferenceCrop.Crop_attributes[] cropAttributes, int crop_mapping_id) {
            return base.Channel.DeleteAndInsertFertilizerAttributes(cropAttributes, crop_mapping_id);
        }
        
        public int DeleteAndInsertPesticideAttributes(FarmerPlusScheduarManager.ServiceReferenceCrop.Crop_attributes[] cropAttributes, int crop_mapping_id) {
            return base.Channel.DeleteAndInsertPesticideAttributes(cropAttributes, crop_mapping_id);
        }
        
        public System.Data.DataSet GetReapingScheduleInfo(string currentDate) {
            return base.Channel.GetReapingScheduleInfo(currentDate);
        }
        
        public System.Data.DataSet GetCultivationScheduleInfo(string currentDate) {
            return base.Channel.GetCultivationScheduleInfo(currentDate);
        }
    }
}
